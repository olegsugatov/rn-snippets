import React, { Component } from 'react';
import { ListView, Button, Text, View, StyleSheet } from 'react-native';
import { Constants } from 'expo';

// const superheroArray = ['Grey Reef Shark', 'Grey Seal', 'Greyhound', 'Grizzly Bear', 'Grouse', 'Guinea Fowl', 'Guinea Pig'];

export default class App extends Component {
constructor(props) {
    super(props);
    
    let array = ['row 1', 'row 2', 'row 3'];
    
    const ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2});
    this.state = {
      dataSource: ds.cloneWithRows(array)
    };
}

// this.getPatientInfo()

  async getPatientInfo() {
    let response = await fetch('https://mobile.aidbox.io/fhir/Patient', {
                                method: 'GET',
                                headers: {
                                  'Accept': 'application/json',
                                  'Content-Type': 'application/json',
                                }
                              });
    // let res = await response.text();
    // console.log(response);
    
    let patients = (JSON.parse(response._bodyInit).entry);
    
    patients.map(function(p){
      console.log(p.resource.name[0].given[0]);
    });
    
    // response.then(function(r){
    //   console.log(r);
    // })
  }
  
  async getUserInfo() {
     let response = await fetch('https://mobile.aidbox.io/users', {
                                method: 'GET',
                                headers: {
                                  'Accept': 'application/json',
                                  'Content-Type': 'application/json',
                                }
                              });
    // let res = await response.text();
    // console.log(response);
    
    // Возвращает строку, надо еще раз пропарсить
    let users = JSON.parse(response._bodyInit);
    
    users.map(function(z) {
      console.log(z.data);
      // console.log(JSON.parse(z.data.age));
    });
  }
  
  render() {
    return (
      
      <View style={styles.container}>
        
        <ListView
          style={styles.container}
          dataSource={this.state.dataSource}
          renderRow={(data) => <View><Text>{data}</Text></View>}
        />
      
        <Text style={styles.paragraph}>
          Change code in the editor and watch it change on your phone!
          Save to get a shareable url. You get a new url each time you save.
        </Text>
        
        <Button
          title="Get Patient Info"
          onPress={this.getPatientInfo}
        />
        
        <Button
          title="Get User Info"
          onPress={this.getUserInfo}
        />

      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    paddingTop: Constants.statusBarHeight,
    backgroundColor: '#ecf0f1',
  },
  paragraph: {
    margin: 24,
    fontSize: 18,
    fontWeight: 'bold',
    textAlign: 'center',
    color: '#34495e',
  },
});
